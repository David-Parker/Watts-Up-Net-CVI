#include "c:\program files (x86)\national instruments\cvi2013\sdk\include\winver.h"


2 24 "c:\\Users\\daparker\\Documents\\David - NI\\CVI Projects\\Watts Up Net\\cvibuild.WUN\\Debug\\manifest.xml"


STRINGTABLE DISCARDABLE
BEGIN
  65535  ""
END

VS_VERSION_INFO VERSIONINFO
 FILEVERSION 1,0,0,0
 PRODUCTVERSION 1,0,0,0
 FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
 FILEFLAGS 0x1L
 FILEOS VOS__WINDOWS32
 FILETYPE VFT_DLL
 FILESUBTYPE VFT_UNKNOWN
BEGIN
    BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904b0"
        BEGIN
            VALUE "CompanyName", "NI\0"
            VALUE "FileDescription", "WUN (Debug x86)\0"
            VALUE "FileVersion", "1.0\0"
            VALUE "InternalName", "WUN\0"
            VALUE "LegalCopyright", "Copyright © NI 2014\0"
            VALUE "OriginalFilename", "WUN.dll\0"
            VALUE "ProductName", "NI WUN\0"
            VALUE "ProductVersion", "1.0\0"
        END
    END
    BLOCK "VarFileInfo"
    BEGIN
        VALUE "Translation", 0x409, 0x4b0
    END
END

CVIDLLexports CVIDLLprototypes
{
   "long WUN_CheckStatus(unsigned long vi);"
   "\n",
   "long WUN_Close(unsigned long vi);"
   "\n",
   "long WUN_ConfigureDataLogging(unsigned long vi, long loggingType, long interval);"
   "\n",
   "long WUN_ConfigureItemsToLog(unsigned long vi, unsigned short Watts, unsigned short Volts, unsigned short Amps, unsigned short Watt_Hours, unsigned short Cost, unsigned short Mo_Ave_KWhr, unsigned short Mo_Ave_Cost, unsigned short Max_Watts, unsigned short Max_Volts, unsigned short Max_Amps, unsigned short Min_Watts, unsigned short Min_Volts, unsigned short Min_Amps, unsigned short Power_Factor, unsigned short Duty_Cycle, unsigned short Power_Cycle, unsigned short Line_Freq, unsigned short Volt_Amps);"
   "\n",
   "long WUN_ConfigureMemoryFullHandling(unsigned long vi, long policy);"
   "\n",
   "long WUN_ConfigureUserParameters(unsigned long vi, long rate, long threshold, long currency);"
   "\n",
   "long WUN_DefaultInstrSetup(unsigned long instrSession);"
   "\n",
   "long WUN_ErrorMessage(unsigned long vi, long statusCode, char *errorMessage);"
   "\n",
   "long WUN_ErrorQuery(unsigned long vi, long *errorCode, char *errorMessage);"
   "\n",
   "long WUN_Initialize(char *VISAResourceName, unsigned short reset, unsigned long *vi);"
   "\n",
   "long WUN_ReadInterval(unsigned long vi, long *Interval);"
   "\n",
   "long WUN_ReadMeterData(unsigned long vi, void **Data, long *RecordNum);"
   "\n",
   "long WUN_ReadRecordNum(unsigned long vi, long *RecordNum);"
   "\n",
   "long WUN_Reset(unsigned long vi);"
   "\n",
   "long WUN_ResetMeterData(unsigned long vi);"
   "\n",
   "long WUN_RevisionQuery(unsigned long vi, char *instrumentDriverRevision, char *instrumentFirmwareRevision);"
   "\n",
   "long WUN_SaveLogFile(unsigned long vi, char *Path, void *Data);"
   "\n",
   "long WUN_SelfTest(unsigned long vi, long *selfTestResultCode, char *selfTestResultMessage);"
   "\n",
   "long WUN_TestCommands(unsigned long vi);"
   "\n",
   "\0"
}
